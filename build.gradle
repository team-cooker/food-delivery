plugins {
    id 'org.springframework.boot' version '2.4.2' apply(false)
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply(false)
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}" apply(false)
    id 'org.jetbrains.kotlin.plugin.spring' version "${kotlinVersion}"
    id 'org.jetbrains.kotlin.plugin.jpa' version "${kotlinVersion}"
    id 'jacoco'
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-jpa'
    apply plugin: 'kotlin-spring'
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'jacoco'

    group 'com.cooker'
    version '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    allOpen {
        annotation("javax.persistence.Entity")
        annotation("javax.persistence.Embeddable")
        annotation("javax.persistence.MappedSuperclass")
    }

    jacoco {
        toolVersion = "0.8.6"
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
        finalizedBy 'jacocoTestReport'
    }

    jacocoTestReport {
        reports {
            html.enabled true
            csv.enabled false
            xml.enabled false
        }
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it,
                        exclude: ["**/com/cooker/fooddelivery/api/config/**"])
            }))
        }
        finalizedBy 'jacocoTestCoverageVerification'
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                enabled = true
                element = 'CLASS'

                limit {
                    counter = 'BRANCH'
                    value = 'COVEREDRATIO'
                    minimum = 0.00
                }

                excludes = ["*.config.*"]
            }
        }
    }

}

project(":food-delivery-core") {
    bootJar { enabled = false }
    jar { enabled = true }
}

project(":food-delivery-api") {
    dependencies {
        implementation project(':food-delivery-core')
    }
}

project(":food-delivery-batch") {
    dependencies {
        implementation project(':food-delivery-core')
    }
}
